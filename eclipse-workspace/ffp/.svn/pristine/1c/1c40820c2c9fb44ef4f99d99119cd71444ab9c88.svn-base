package com.forms.ffp.persistents.dao.addressing;

import org.springframework.stereotype.Repository;

import com.forms.beneform4j.core.dao.annotation.BatchParam;
import com.forms.beneform4j.core.dao.annotation.Execute;
import com.forms.beneform4j.core.dao.annotation.Executes;
import com.forms.beneform4j.core.dao.annotation.SqlRef;
import com.forms.ffp.persistents.bean.FFPJbBase;
import com.forms.ffp.persistents.bean.addressing.FFPJbA100;

@Repository("FFPIDao_A100")
public interface FFPIDao_A100{
	
	@Executes({
			// 插入交易表
			@Execute(sqlRef = @SqlRef("INSERT_TB_TX_JNL") , param = @BatchParam(value = false, property = "txJnl") ),
			@Execute(sqlRef = @SqlRef("INSERT_LIST_TXJNLACTION") , param = @BatchParam(item = "jnlAction", property = "jnlActionList") ),
			@Execute(sqlRef = @SqlRef("INSERT_TB_TX_A100DAT") , param = @BatchParam(false)),
			@Execute(sqlRef = @SqlRef("INSERT_UPDATE_TB_DT_ADDRESSING") , param = @BatchParam(value = false, property = "jbAdrs")) 
	})
	public int[] dInsert(FFPJbA100 form);

	@Executes({ 
			@Execute(sqlRef = @SqlRef("UPDATE_TXJNL_STAT") , param = @BatchParam(value = false, property = "txJnl") ),
			@Execute(sqlRef = @SqlRef("INSERT_UPDATE_LIST_TXJNLACTION") , param = @BatchParam(item = "jnlAction", property = "jnlActionList")) 
	})
	public int[] updateJnlStat(FFPJbBase form);

	/**
	 * inquery JNL_NO by MSG_ID
	 * @param msgId
	 * @return
	 */
	public String inqueryJnlNoByMsgId(String msgId);
	/**
	 * update tb_tx_a100dat STAT
	 * @param form
	 * @return
	 */
	@Execute(sqlRef = @SqlRef("UPDATE_A100_STAT") , param = @BatchParam(value = false, property = "jbA100"))
	public int updateA100Stat(FFPJbA100 form);
	/**
	 * insert tb_tx_jnl,tb_tx_jnlaction
	 * update tb_dt_addressing 
	 * @param form
	 * @return
	 */
	@Executes({
		// 插入交易表
		@Execute(sqlRef = @SqlRef("INSERT_TB_TX_JNL") , param = @BatchParam(value = false, property = "txJnl") ),
		@Execute(sqlRef = @SqlRef("INSERT_LIST_TXJNLACTION") , param = @BatchParam(item = "jnlAction", property = "jnlActionList") ),
		@Execute(sqlRef = @SqlRef("UPDATE_TB_DT_ADRESSING") , param = @BatchParam(false))
	})
	public int[] updateAddressing(FFPJbA100 form);

	public FFPJbA100 inqueryJbA100ByJnlNo(String jnlNo);
}
