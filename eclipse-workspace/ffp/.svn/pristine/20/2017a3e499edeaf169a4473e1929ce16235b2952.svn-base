package com.forms.ffp.bussiness.participant.addressing.ffpadr01;

import java.util.List;

import javax.xml.bind.JAXBElement;

import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.AddressingScheme;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.Agent;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.ClearingSystemMemberIdentification;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.CustomerType;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.Document;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.FinancialInstitutionIdentification;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.GroupHeader;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.MessageRoot;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.ObjectFactory;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.OptionCode;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.ProxyIDType;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.Purpose;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.PurposeCode;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.SupportedOption;
import com.forms.ffp.adaptor.jaxb.iclfps.fps_adrs_001_001_01.YesNoIndicator;
import com.forms.ffp.adaptor.jaxb.iclfps.head_001_001_01.BusinessApplicationHeaderV01;
import com.forms.ffp.adaptor.jaxb.iclfps.head_001_001_01.FPSBusinessServiceCode;
import com.forms.ffp.core.define.FFPConstantsTxJnl;
import com.forms.ffp.core.msg.iclfps.FFPMsgBaseHkiclMessage;
import com.forms.ffp.core.utils.FFPXMLUtils;
import com.forms.ffp.persistents.bean.FFPTxJnlAction;
import com.forms.ffp.persistents.bean.addressing.FFPJbA100;

public class FFPMsgFfpadr01_Fpsadrs001 extends FFPMsgBaseHkiclMessage{
	
	private ObjectFactory _objFactory = new ObjectFactory();
	
	private FFPVoFfpadr01 adr01 = null;
	
	public FFPMsgFfpadr01_Fpsadrs001(FFPVoFfpadr01 adr01){
		this.adr01 = adr01;
	}
	
	public JAXBElement<BusinessApplicationHeaderV01> marshalMsgBizDataHead()
	{
		BusinessApplicationHeaderV01 appHdr = new BusinessApplicationHeaderV01();
		appHdr.setFr(createParty(this.msgFromID));
		appHdr.setTo(createParty(this.msgToID));
		appHdr.setBizMsgIdr(this.msgID);
		appHdr.setMsgDefIdr(this.msgTypeName);
		appHdr.setBizSvc(FPSBusinessServiceCode.fromValue(this.msgBizSvc));
		appHdr.setCreDt(FFPXMLUtils.toGregorianDt(this.creDt));

		return (new com.forms.ffp.adaptor.jaxb.iclfps.head_001_001_01.ObjectFactory()).createAppHdr(appHdr);
	}
	
	public JAXBElement<?> marshalMsgBizDataDocument()
	{
		Document loc_doc = createDocument();
		return (new ObjectFactory()).createDocument(loc_doc);
	}

	private Document createDocument(){
		
		FFPJbA100 jbA100 = adr01.getJbA100();
		
		Document doc = _objFactory.createDocument();
		MessageRoot msgRoot = _objFactory.createMessageRoot();
		
		GroupHeader gh = _objFactory.createGroupHeader();
		gh.setMsgId(this.msgID);
		gh.setCreDtTm(FFPXMLUtils.toGregorianDt(this.creDt));
		msgRoot.setGrpHdr(gh);
		
		AddressingScheme as = _objFactory.createAddressingScheme();
		as.setAdrReqId(jbA100.getAdrReqId());
		
		Agent agent = new Agent();
		FinancialInstitutionIdentification fi = new FinancialInstitutionIdentification();
		agent.setFinInstnId(fi);
		ClearingSystemMemberIdentification csmi = new ClearingSystemMemberIdentification();
		fi.setClrSysMmbId(csmi);
		csmi.setMmbId(jbA100.getClrCd());
		as.setAgt(agent);
		
		as.setCusId(jbA100.getCusId());
		as.setCusTp(CustomerType.fromValue(jbA100.getCusTp()));
		as.setDflt(YesNoIndicator.fromValue(jbA100.getDflt()));
		
		as.setId(jbA100.getProxyId());
		
		Purpose purp = new Purpose();
		purp.setCd(PurposeCode.fromValue(jbA100.getPurpCd()));
		as.setPurp(purp);
		
		SupportedOption so = new SupportedOption();
		so.getCd().add(OptionCode.fromValue(jbA100.getPurpCd()));
		as.setSupOp(so);
		
		as.setTp(ProxyIDType.fromValue(jbA100.getProxyIdTp()));
		
		msgRoot.getAdrSchme().add(as);
		
		doc.setAdrInitnReq(msgRoot);
		
		return doc;
	}
	
	public void getResponseDataFromDB(List<FFPTxJnlAction> actionList){
		
		FFPJbA100 jbA100 = adr01.getJbA100();
		
		FFPMsgFpsadr004_Ffpamr01REPLY reply = new FFPMsgFpsadr004_Ffpamr01REPLY();
		FFPTxJnlAction action = actionList.get(actionList.size()-1);
		String status = action.getMsgStatus();
		if(FFPConstantsTxJnl.TX_STATUS.TX_STAT_TMOUT.getStatus().equalsIgnoreCase(status)){
			//TIME OUT
			reply.setSts("TMOU");
//			reply.setRsnInfCd("timeout");
		}else{
			//APPST or REJECT
			reply.setSts(status);
//			if("RJCT".equalsIgnoreCase(action.getMsgStatus())){
//				reply.setRsnInfCd(action.getRejCode());
//			}
		}
		reply.setSrcRefNm(jbA100.getSrcRefNm());
		reply.setProxyId(jbA100.getProxyId());
		reply.setProxyIdTp(jbA100.getProxyIdTp());
		adr01.setReply(reply);
	}
}
