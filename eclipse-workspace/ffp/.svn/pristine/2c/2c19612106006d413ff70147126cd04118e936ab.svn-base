package com.forms.ffp.bussiness.participant.ffpddo01;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.forms.ffp.adaptor.jaxb.participant.request.ROOT;
import com.forms.ffp.adaptor.jaxb.participant.request.ffpddo01.FFPDDO01;
import com.forms.ffp.adaptor.jaxb.participant.request.head.HEAD;
import com.forms.ffp.bussiness.utils.FFPJnlUtils;
import com.forms.ffp.core.define.FFPConstants;
import com.forms.ffp.core.define.FFPConstantsTxJnl;
import com.forms.ffp.core.msg.FFPAdaptorMgr;
import com.forms.ffp.core.msg.iclfps.FFPSendMessageResp;
import com.forms.ffp.core.msg.participant.FFPParticipantMessageWrapper;
import com.forms.ffp.core.utils.FFPDateUtils;
import com.forms.ffp.core.utils.FFPIDUtils;
import com.forms.ffp.persistents.bean.FFPTxBase;
import com.forms.ffp.persistents.bean.FFPTxJnl;
import com.forms.ffp.persistents.bean.FFPTxJnlAction;
import com.forms.ffp.persistents.bean.payment.directdebit.FFPJbP210;
import com.forms.ffp.persistents.service.FFPIDaoService_TxjnlAction;
import com.forms.ffp.persistents.service.payment.directdebit.FFPIDaoService_P210;

@Component("FFPAGENT.FFPDDO01")
@Scope("prototype")
public class FFPTxDDO01 extends FFPTxBase {
	
	@Resource(name = "FFPDaoService_P210")
	private FFPIDaoService_P210 daoService;
	
	@Resource(name = "FFPDaoService_TxjnlAction")
	private FFPIDaoService_TxjnlAction txJnlActionService;

	@Override
	public void perform() throws Exception {
		
		if ("FFPAGENT.FFPDDO01".equals(this.serviceName)){
			FFPVO_DDO01 loc_vo = (FFPVO_DDO01)txVo;
			FFPJbP210 loc_p210 = loc_vo.getP210Jb();
			FFPMsgDDO01_Pacs003 pacs003 = new FFPMsgDDO01_Pacs003(loc_p210);
			Date loc_date = new Date();
			FFPTxJnlAction jnlAction = FFPJnlUtils.getInstance().newJnlAction(loc_p210.getTxJnl().getJnlNo(),
					pacs003.getMsgID(), FFPConstants.MSG_DIRECTION_OUTWARD, FFPConstants.RELATION_SYSTEM_HKICL, pacs003.getMsgTypeName(),
					FFPConstantsTxJnl.MSG_STATUS.MSG_STAT_CREAT.getStatus(),
					loc_date, loc_date, null, null);
			
			FFPSendMessageResp resp = (FFPSendMessageResp)FFPAdaptorMgr.getInstance().execute(pacs003);
			jnlAction.setMsgStatus(resp.getMessageStatus());
			jnlAction.setMsgComplTs(new Date());
			loc_p210.getJnlActionList().add(jnlAction);
			
			if(FFPConstantsTxJnl.MSG_STATUS.MSG_STAT_MSYNC.equals(resp.getMessageStatus()))
			{
				loc_p210.getTxJnl().setTxStat(FFPConstantsTxJnl.TX_STATUS.TX_STAT_APPST.getStatus());
				loc_p210.getTxJnl().setLastUpdateTs(jnlAction.getMsgComplTs());
			}
			// upadte DB
			this.daoService.updateJnlStat(loc_p210);
		}
		
	}

	@Override
	public void validate() throws Exception {
		
	}
	
	public void parseParticipantData(FFPParticipantMessageWrapper wrapper) throws Exception{
		
	    ROOT root = wrapper.getRequestRoot();
	    
		if ("FFPAGENT.FFPDDO01".equals(this.serviceName))
		{
			txVo = new FFPVO_DDO01();
			HEAD head = root.getHEAD();
			FFPDDO01 msg = (FFPDDO01) root.getBODY();
			
			FFPJbP210 loc_jb = new FFPJbP210();
			loc_jb.setSrcRefNm(msg.getSrcRefNm());
			loc_jb.setSrvcMode(msg.getSrvcMode());
			loc_jb.setPymtCatPrps(msg.getPymtCatPrps());
			
			loc_jb.setSettlementDate(FFPDateUtils.convertStringToDate(msg.getSettlDate(), FFPDateUtils.INT_DATE_FORMAT));
			loc_jb.setSettlementCurrency(msg.getSettlCcy());
			loc_jb.setSettlementAmount(msg.getSettlAmt());
			loc_jb.setInstructedCurrency(msg.getInstrCcy());
			loc_jb.setInstructedAmount(msg.getInstrAmt());
			loc_jb.setChargersAgentId(msg.getCdtrAgent().getID());
			loc_jb.setChargersAgentBic(msg.getCdtrAgent().getBICCODE());
			loc_jb.setChargersCurrency(msg.getChrgrsCcy());
			loc_jb.setChargersAmount(msg.getChrgrsAmt());
			loc_jb.setDebtorName(msg.getDbtrNm());
			loc_jb.setDebtorAccountNumber(msg.getDbtrAcNo());
			loc_jb.setDebtorAccountNumberType(msg.getDbtrAcTp());
			
			loc_jb.setDebtorAgentBic(msg.getDbtrAgent().getBICCODE());
			loc_jb.setDebtorAgentId(msg.getDbtrAgent().getID());
			
			loc_jb.setCreditorName(msg.getCdtrNm());
			loc_jb.setDbtrContPhone(msg.getDbtrContPhone());
			loc_jb.setDbtrContEmailAddr(msg.getDbtrContEmailAddr());
			loc_jb.setCreditorAccountNumber(msg.getCdtrAcNo());
			loc_jb.setCreditorAccountNumberType(msg.getCdtrAcTp());
			loc_jb.setCreditorAgentId(msg.getCdtrAgent().getID());
			loc_jb.setCreditorAgentBic(msg.getCdtrAgent().getBICCODE());
			loc_jb.setCdtrContPhone(msg.getCdtrContPhone());
			loc_jb.setCdtrContEmailAddr(msg.getCdtrContEmailAddr());
			loc_jb.setRemittanceInformation(msg.getRemInfo());
			loc_jb.setDbtrRltId(msg.getDbtrRltId());
			
			//无处安放
//			String pytPurp = msg.getPytPurp();
//			loc_jb.setPaymentPurposeType(msg.getPytPurpType());
//			if("OTHER".equals(loc_jb.getPaymentPurposeType()))
//			{
//				loc_jb.setPaymentPurposeProprietary(msg.getPytPurp());
//			}
//			else if("CODE".equals(loc_jb.getPaymentPurposeType()))
//			{
//				loc_jb.setPaymentPurposeCd(msg.getPytPurp());
//			}
			
			FFPTxJnl txJnl = new FFPTxJnl();
			txJnl.setSrcRefNm(msg.getSrcRefNm());
			txJnl.setJnlNo(FFPIDUtils.getJnlNo());
			txJnl.setTxStat(FFPConstantsTxJnl.TX_STATUS.TX_STAT_CREAT.getStatus());
			txJnl.setTxSrc(FFPConstants.TX_SOURCE_FFPAGENT);
			txJnl.setTransactionId(FFPIDUtils.getTransactionId());
			txJnl.setEndToEndId(FFPIDUtils.getEndToEndId());
			txJnl.setTxCode(FFPConstantsTxJnl.TX_CODE.TX_CODE_P210.getCode());
			Date loc_date = new Date();
			txJnl.setCreateTs(loc_date);
			txJnl.setLastUpdateTs(loc_date);
			loc_jb.setTxJnl(txJnl);
			
			List<FFPTxJnlAction> jnlActionList = new ArrayList<>();
			FFPTxJnlAction jnlAction = FFPJnlUtils.getInstance().newJnlAction(txJnl.getJnlNo(),
					head.getRequestRefno(), FFPConstants.MSG_DIRECTION_INWARD, head.getRequestID(), head.getMessageType(),
					FFPConstantsTxJnl.MSG_STATUS.MSG_STAT_MSYNC.getStatus(),
					FFPDateUtils.convertStringToDate(head.getTransactionDate() + head.getTransactionTime(), FFPDateUtils.INT_TIMESTAMP_FORMAT),
					loc_date, loc_date, null);
			jnlActionList.add(jnlAction);
			loc_jb.setJnlActionList(jnlActionList);
			
			FFPVO_DDO01 loc_vo = (FFPVO_DDO01)txVo;
			loc_vo.setP210Jb(loc_jb);
			// Save 
			this.daoService.sInsert(loc_jb);
		}
	}

}
