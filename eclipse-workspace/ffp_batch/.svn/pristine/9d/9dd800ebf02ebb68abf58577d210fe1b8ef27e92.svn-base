<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 U (http://www.altova.com) by ahnan (EMBRACE) -->
<job-sql-configs>
	<transaction>
		<sql>
			MERGE INTO #{schema}.T_OVERSEAS_ARCHIVES A
			USING 
			(
				SELECT	DISTINCT
						A.OREF_NO AS SYS_ARCHIVES_NO,
						A.OREF_NO AS ARCHIVES_NO,
						'D_OVERSEAS_PAY' AS TABLE_NAME,
						A.OREF_NO AS RTL_NO,
						A.SEND_MSGNO AS SEND_MSG_NO,
						A.RLT_OREF_NO AS RLT_OREF_NO,
				       A.ORG_RECV_DATE AS TRANS_DATE,
				       '0:00:00' AS TRANS_TIME,
				       A.MSG_TYPE AS MSG_TYPE,
				       A.TRADE_CCY AS CURR_CODE,
				       A.TRADE_AMT AS TRADE_AMT,
				       A.ORG_RECV_BANK AS BANK_NO, 
				       '' AS TRANS_NET,
				       '' AS CURR_NET,
				       'HANG999' AS OPER_ID,
				       A.MSG_STATUS AS MSG_STATE,
				       CURRENT DATE AS MERGER_DATE,
				       CURRENT TIME AS MERGER_TIME,
				       'HANG999' AS MERGER_USER,
				       'N' AS CASE_STATUS,
				       A.DATA_FLAG AS DATA_FLAG
				FROM #{schema}.D_OVERSEAS_PAY A
				JOIN #{schema}.M_OVERSEAS_SEND B
				ON A.STL_CASE_NO = B.SEND_MSGNO
				WHERE A.STL_CASE_NO IS NOT NULL
			) B
			ON A.RTL_NO = B.RTL_NO
			AND A.TABLE_NAME = 'D_OVERSEAS_PAY'
			WHEN MATCHED
				THEN UPDATE SET
				(A.SEND_MSG_NO,		A.RLT_OREF_NO,			A.TRANS_DATE,		A.TRANS_TIME,		A.MSG_TYPE,
				A.CURR_CODE,		A.TRADE_AMT,			A.BANK_NO,			A.TRANS_NET,		A.CURR_NET,
				A.OPER_ID,			A.MSG_STATE,			A.MERGER_DATE,		A.MERGER_TIME,		A.MERGER_USER,
				A.CASE_STATUS,		A.DATA_FLAG)
			   =(B.SEND_MSG_NO,		B.RLT_OREF_NO,			B.TRANS_DATE,		B.TRANS_TIME,		B.MSG_TYPE,
				B.CURR_CODE,		B.TRADE_AMT,			B.BANK_NO,			B.TRANS_NET,		B.CURR_NET,
				B.OPER_ID,			B.MSG_STATE,			B.MERGER_DATE,		B.MERGER_TIME,		B.MERGER_USER,
				B.CASE_STATUS,		B.DATA_FLAG)
			WHEN NOT MATCHED
			THEN INSERT 
					(SYS_ARCHIVES_NO,	ARCHIVES_NO,		TABLE_NAME,		RTL_NO,			SEND_MSG_NO,
					RLT_OREF_NO,		TRANS_DATE,			TRANS_TIME,		MSG_TYPE,		CURR_CODE,
					TRADE_AMT,			BANK_NO,			TRANS_NET,		CURR_NET,		OPER_ID,
					MSG_STATE,			MERGER_DATE,		MERGER_TIME,	MERGER_USER,	CASE_STATUS,
					DATA_FLAG)
			VALUES(SYS_ARCHIVES_NO,		ARCHIVES_NO,		TABLE_NAME,		RTL_NO,			SEND_MSG_NO,
					RLT_OREF_NO,		TRANS_DATE,			TRANS_TIME,		MSG_TYPE,		CURR_CODE,
					TRADE_AMT,			BANK_NO,			TRANS_NET,		CURR_NET,		OPER_ID,
					MSG_STATE,			MERGER_DATE,		MERGER_TIME,	MERGER_USER,	CASE_STATUS,
					DATA_FLAG)
		</sql>
	</transaction>
	<transaction>
		<sql>
			MERGE INTO #{schema}.T_OVERSEAS_ARCHIVES A
			USING 
			(
				SELECT	DISTINCT
						A.OREF_NO AS SYS_ARCHIVES_NO,
						A.OREF_NO AS ARCHIVES_NO,
						'M_OVERSEAS_SEND' AS TABLE_NAME,
						B.OREF_NO AS RTL_NO,
						B.SEND_MSGNO AS SEND_MSG_NO,
						B.RLT_OREF_NO AS RLT_OREF_NO,
				       B.QRY_DATE AS TRANS_DATE,
				       '0:00:00' AS TRANS_TIME,
				       B.MSG_TYPE AS MSG_TYPE,
				       B.CCY AS CURR_CODE,
				       B.TRADE_AMT AS TRADE_AMT,
				       B.REV_BKNO AS BANK_NO, 
				       '' AS TRANS_NET,
				       '' AS CURR_NET,
				       'HANG999' AS OPER_ID,
				       B.RTN_STATE_CODE AS MSG_STATE,
				       CURRENT DATE AS MERGER_DATE,
				       CURRENT TIME AS MERGER_TIME,
				       'HANG999' AS MERGER_USER,
				       'N' AS CASE_STATUS,
				       B.DATA_FLAG AS DATA_FLAG
				FROM #{schema}.D_OVERSEAS_PAY A
				JOIN #{schema}.M_OVERSEAS_SEND B
				ON A.STL_CASE_NO = B.SEND_MSGNO
				WHERE A.STL_CASE_NO IS NOT NULL
			) B
			ON A.RTL_NO = B.RTL_NO
			AND A.TABLE_NAME = 'M_OVERSEAS_SEND'
			WHEN MATCHED
				THEN UPDATE SET
				(A.SEND_MSG_NO,		A.RLT_OREF_NO,			A.TRANS_DATE,		A.TRANS_TIME,		A.MSG_TYPE,
				A.CURR_CODE,		A.TRADE_AMT,			A.BANK_NO,			A.TRANS_NET,		A.CURR_NET,
				A.OPER_ID,			A.MSG_STATE,			A.MERGER_DATE,		A.MERGER_TIME,		A.MERGER_USER,
				A.CASE_STATUS,		A.DATA_FLAG)
			   =(B.SEND_MSG_NO,		B.RLT_OREF_NO,			B.TRANS_DATE,		B.TRANS_TIME,		B.MSG_TYPE,
				B.CURR_CODE,		B.TRADE_AMT,			B.BANK_NO,			B.TRANS_NET,		B.CURR_NET,
				B.OPER_ID,			B.MSG_STATE,			B.MERGER_DATE,		B.MERGER_TIME,		B.MERGER_USER,
				B.CASE_STATUS,		B.DATA_FLAG)
			WHEN NOT MATCHED
			THEN INSERT 
					(SYS_ARCHIVES_NO,	ARCHIVES_NO,		TABLE_NAME,		RTL_NO,			SEND_MSG_NO,
					RLT_OREF_NO,		TRANS_DATE,			TRANS_TIME,		MSG_TYPE,		CURR_CODE,
					TRADE_AMT,			BANK_NO,			TRANS_NET,		CURR_NET,		OPER_ID,
					MSG_STATE,			MERGER_DATE,		MERGER_TIME,	MERGER_USER,	CASE_STATUS,
					DATA_FLAG)
			VALUES(SYS_ARCHIVES_NO,		ARCHIVES_NO,		TABLE_NAME,		RTL_NO,			SEND_MSG_NO,
					RLT_OREF_NO,		TRANS_DATE,			TRANS_TIME,		MSG_TYPE,		CURR_CODE,
					TRADE_AMT,			BANK_NO,			TRANS_NET,		CURR_NET,		OPER_ID,
					MSG_STATE,			MERGER_DATE,		MERGER_TIME,	MERGER_USER,	CASE_STATUS,
					DATA_FLAG)
		</sql>
	</transaction>
</job-sql-configs>