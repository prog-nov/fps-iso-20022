package com.forms.batch.job.unit.participant.outwardresponse;

import com.forms.ffp.adaptor.define.FFPJaxbConstants;
import com.forms.ffp.adaptor.jaxb.iclfps.pacs_002_001_08.FPSTransactionStatusCode;
import com.forms.ffp.adaptor.jaxb.participant.response.BODY;
import com.forms.ffp.adaptor.jaxb.participant.response.ROOT;
import com.forms.ffp.adaptor.jaxb.participant.response.ffpcto01.FFPCTO01;
import com.forms.ffp.core.define.FFPConstants;
import com.forms.ffp.core.msg.participant.FFPMsgBaseResponseParticipantMessage;
import com.forms.ffp.core.msg.participant.FFPParticipantMessageConverter;

public class FFPMsgPacs002_CTO01 extends FFPMsgBaseResponseParticipantMessage
{
	private FFPVO_Pacs002_TxInfAndSts msgJb_txInf = null;

	public FFPMsgPacs002_CTO01(FFPVO_Pacs002 ip_pacs002, int ip_i)
	{
		super();
		this.msgType = FFPJaxbConstants.JAXB_MSG_TYPE_FFPCTO01;
		this.msgJb_txInf = ip_pacs002.getTxInfList().get(ip_i);
		this.requestID = FFPConstants.MSG_CODE_FFP;
		this.responseID = FFPConstants.MSG_CODE_AGENT;
	}

	public BODY marshalMsgBody()
	{
		FFPCTO01 cto01 = new FFPCTO01();
		cto01.setSrcRefNm(msgJb_txInf.getP100Jb().getSrcRefNm());
		cto01.setFFPTransactionId(msgJb_txInf.getOrgnlTxId());
		cto01.setRsltCd(msgJb_txInf.getTxSts());
		if (!FPSTransactionStatusCode.ACSC.equals(msgJb_txInf.getTxSts()))
		{
			cto01.setRejCd(msgJb_txInf.getTxStsRsnCode());
			if (msgJb_txInf.getTxStsAddtlInf() != null)
			{
				StringBuffer loc_sb = new StringBuffer();
				for (String str : msgJb_txInf.getTxStsAddtlInf())
					loc_sb.append(str);
				cto01.setRejMsg(loc_sb.toString());
			}

		}
		return cto01;
	}

	public void unmarshalResponseMsg(String ip_responseMsg)
	{
		try
		{
			ROOT root = FFPParticipantMessageConverter.parseXml2ReponseObject(ip_responseMsg);
			com.forms.ffp.adaptor.jaxb.participant.response.BODY body = root.getBODY();
			com.forms.ffp.adaptor.jaxb.participant.response.ffpcto01.FFPCTO01 cto01 = (com.forms.ffp.adaptor.jaxb.participant.response.ffpcto01.FFPCTO01) body;
			if (msgJb_txInf.getP100Jb().getSrcRefNm().equals(cto01.getSrcRefNm()))
			{
				FFPVO_Pacs002_CTO01REPLY reply = new FFPVO_Pacs002_CTO01REPLY();
				reply.setRejCd(cto01.getRejCd());
				reply.setRejMsg(cto01.getRejMsg());
				reply.setSrcRefNm(cto01.getSrcRefNm());
				reply.setRsltCd(cto01.getRsltCd());
				msgJb_txInf.setCto01Reply(reply);
			} else
			{
				// return src is not correct!!
				System.out.println("srcrefnm from p100 doesnt match return srcrefnm");

			}

		} catch (Exception e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return;
	}

	public FFPVO_Pacs002_TxInfAndSts getMsgJb_txInf()
	{
		return msgJb_txInf;
	}

	public void setMsgJb_txInf(FFPVO_Pacs002_TxInfAndSts msgJb_txInf)
	{
		this.msgJb_txInf = msgJb_txInf;
	}

}
